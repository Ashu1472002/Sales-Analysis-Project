# -*- coding: utf-8 -*-
"""Sales_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14cKY4NeYeh25gCsSUadd8Hip6NDNEXyQ

Import necessary libraries
"""

import pandas as pd
import os

"""###Task 1:Merge the 12 months of sales data into a single CSV file"""

df = pd.read_csv("/content/drive/MyDrive/Sales_Data/Sales_April_2019.csv")
#print(df.head())

files = [file for file in os .listdir('/content/drive/MyDrive/Sales_Data/')]
all_months_data = pd.DataFrame()
for file in files:
  df = pd.read_csv("/content/drive/MyDrive/Sales_Data/"+file)
  all_months_data = pd.concat([all_months_data,df])

all_months_data.to_csv("all_data_file.csv",index=False)

"""### Read in updated dataframe"""

all_months_data = pd.read_csv("/content/all_data_file.csv")
all_months_data.head()

"""#Clean up the data!

##Drop rows of NaN
"""

nan_df = all_months_data[all_months_data.isna().any(axis=1)]
nan_df.head()

all_months_data = all_months_data.dropna(how='all')
all_months_data.head()

"""####Find 'Or' and delete it"""

all_months_data = all_months_data[all_months_data['Order Date'].str[0:2] != 'Or']

"""####Convert columns to the correct type"""

all_months_data['Quantity Ordered'] = pd.to_numeric(all_months_data['Quantity Ordered'])  # make int
all_months_data['Price Each'] = pd.to_numeric(all_months_data['Price Each']) # make float



"""#### Augment data with additional columns

#Task 2: Add Month Column
"""

all_months_data['Month'] = all_months_data['Order Date'].str[0:2]
all_months_data['Month'] = all_months_data['Month'].astype('Int32')
all_months_data.head()

"""#Task 3 : Add a sales column"""

all_months_data['Sales'] = all_months_data['Quantity Ordered'] * all_months_data['Price Each']
all_months_data.head()

"""##Task 4 : Add a city column

"""

# Lets's use apply()
def get_city(address):
  return address.split(',')[1]

def get_state(address):
  return address.split(',')[2].split(' ')[1]

all_months_data['City'] = all_months_data['Purchase Address'].apply(lambda x: get_city(x) + ' ' + get_state(x))
all_months_data.head()

"""#Question 1 : What was the best month for sales? How much was earned that month?"""

all_months_data.groupby('Month').sum()['Sales']



import matplotlib.pyplot as plt
months = range(1,13)
results= all_months_data.groupby('Month').sum()['Sales']
plt.bar(months,results,color='purple')
plt.xticks(months)
plt.yticks(results)
plt.xlabel('Month Number')
plt.ylabel('Sales in USD ($)')
plt.show();

"""#Question 2 : What city had the highest number of sales?"""

results=all_months_data.groupby('City')['Sales'].sum()
results

import matplotlib.pyplot as plt
plt.bar(results.index,results.values,color='purple')
plt.xticks(results.index,rotation='vertical',size=10)
plt.yticks(results.values)
plt.xlabel('Cities')
plt.ylabel('Sales in USD ($)')
plt.show();

"""#Question 3 : What time should we display advertisements to maximize likelihood of customer's buying products?"""

all_months_data['Order Date'] = pd.to_datetime(all_months_data['Order Date'])
all_months_data['Hour'] = all_months_data['Order Date'].dt.hour
all_months_data['Minute'] = all_months_data['Order Date'].dt.minute

all_months_data.head()

hours = [hour for hour,df in all_months_data.groupby('Hour')]
plt.plot(hours,all_months_data.groupby(['Hour']).count())
plt.xticks(hours)
plt.xlabel('Hour')
plt.ylabel('Number of Orders')
plt.grid()
plt.show()

"""#Question 4 : What products are the most often sold together?"""

df = all_months_data[all_months_data['Order ID'].duplicated(keep = False)]
df['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x:','.join(x))
df= df[['Order ID','Grouped']].drop_duplicates()
df.head()

from itertools import combinations
from collections import Counter

count = Counter()

for row in df['Grouped']:
  row_list = row.split(',')
  count.update(Counter(combinations(row_list,2)))

for key , value in count.most_common(10):
  print(key,value)

"""#Question 5 : What product sold the most?Why do you think it sold the most?"""

product_group = all_months_data.groupby('Product')
quantity_ordered = product_group['Quantity Ordered'].sum()

products = [product for product,df in product_group]
plt.bar(products,quantity_ordered)
plt.xticks(products,rotation='vertical',size=10)
plt.show()

prices = all_months_data.groupby('Product')['Price Each'].mean()
fig, ax1 = plt.subplots()

ax2 = ax1.twinx()
ax1.bar(products,quantity_ordered)
ax2.plot(products,prices,'b-',color='r')

plt.xticks(products,rotation='vertical',size=10)

ax1.set_xlabel('Products')
ax1.set_ylabel('Quantity Ordered')
ax2.set_ylabel('Price ($)')
ax1.set_xticklabels(products,rotation='vertical',size=10)

plt.show()